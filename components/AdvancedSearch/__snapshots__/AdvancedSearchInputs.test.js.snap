// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<AdvancedSearchInputs /> snapshots renders with allInputsOpen 1`] = `
<Box>
  <Text
    fontWeight="700"
    m={0}
    my={2}
    width="100%"
  >
    advanced-search:title
  </Text>
  <Flex
    extend={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "_foldedDefaultProps": Object {},
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "baseHash": 400283751,
          "componentId": "sc-AxjAm",
          "isStatic": false,
          "rules": Array [
            "box-sizing: border-box;",
            [Function],
            [Function],
            [Function],
            [Function],
            [Function],
            [Function],
            [Function],
            [Function],
          ],
          "staticRulesId": "",
        },
        "displayName": "Box",
        "foldedComponentIds": Array [],
        "propTypes": Object {
          "alignSelf": [Function],
          "bg": [Function],
          "color": [Function],
          "flex": [Function],
          "fontSize": [Function],
          "m": [Function],
          "mb": [Function],
          "ml": [Function],
          "mr": [Function],
          "mt": [Function],
          "mx": [Function],
          "my": [Function],
          "order": [Function],
          "p": [Function],
          "pb": [Function],
          "pl": [Function],
          "pr": [Function],
          "pt": [Function],
          "px": [Function],
          "py": [Function],
          "width": [Function],
        },
        "render": [Function],
        "shouldForwardProp": undefined,
        "styledComponentId": "sc-AxjAm",
        "systemComponent": true,
        "target": Object {
          "$$typeof": Symbol(react.forward_ref),
          "render": [Function],
        },
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      }
    }
    flexWrap="wrap"
  >
    <Box
      mb=".75rem"
      pr={
        Array [
          0,
          0,
          ".5rem",
          ".5rem",
        ]
      }
      width={
        Array [
          1,
          1,
          0.5,
          0.5,
        ]
      }
    >
      <Connect(RatingSelect)
        label="advanced-search:input-label-course-rating"
        onChange={[Function]}
        placeholder="advanced-search:input-placeholder-course-rating"
      />
    </Box>
    <Box
      mb=".75rem"
      pr={
        Array [
          0,
          0,
          ".5rem",
          ".5rem",
        ]
      }
      width={
        Array [
          1,
          1,
          0.5,
          0.5,
        ]
      }
    >
      <CourseTypeSelect
        label="advanced-search:input-label-course-type"
        onChange={[Function]}
        placeholder="advanced-search:input-placeholder-course-type"
      />
    </Box>
    <Box
      mb=".75rem"
      pr={
        Array [
          0,
          0,
          ".5rem",
          ".5rem",
        ]
      }
      width={
        Array [
          1,
          1,
          0.5,
          0.5,
        ]
      }
    >
      <Label
        alignItems="center"
        fontSize={1}
        is="label"
        mb={1}
      >
        advanced-search:slider-label-hole-average-length
      </Label>
      <InputComponent
        focusOnMount={false}
        onChange={[Function]}
        options={
          Object {
            "domain": Array [
              10,
              180,
            ],
            "filterName": "holeAverageLength",
            "initialValues": Array [
              40,
              180,
            ],
            "step": 10,
            "type": "slider",
          }
        }
        placeholder=""
        value=""
      />
    </Box>
    <AdvancedSearchInputsstyles__FadeInBox
      show={true}
    >
      <Box
        mb=".75rem"
        pr={
          Array [
            0,
            0,
            ".5rem",
            ".5rem",
          ]
        }
        width={
          Array [
            1,
            1,
            0.5,
            0.5,
          ]
        }
      >
        <BasketTypeSelect
          label="advanced-search:input-label-basket-type"
          onChange={[Function]}
          placeholder="advanced-search:input-placeholder-basket-type"
        />
      </Box>
      <Box
        mb=".75rem"
        pr={
          Array [
            0,
            0,
            ".5rem",
            ".5rem",
          ]
        }
        width={
          Array [
            1,
            1,
            0.5,
            0.5,
          ]
        }
      >
        <TeeTypeSelect
          label="advanced-search:input-label-tee-type"
          onChange={[Function]}
          placeholder="advanced-search:input-placeholder-tee-type"
        />
      </Box>
      <Box
        mb=".75rem"
        pr={
          Array [
            0,
            0,
            ".5rem",
            ".5rem",
          ]
        }
        width={
          Array [
            1,
            1,
            0.5,
            0.5,
          ]
        }
      >
        <SurfaceTypeSelect
          label="advanced-search:input-label-surface-contour-type"
          onChange={[Function]}
          placeholder="advanced-search:input-placeholder-surface-contour-type"
        />
      </Box>
    </AdvancedSearchInputsstyles__FadeInBox>
    <Toggle
      checked={true}
      handleOnChange={[Function]}
      label="advanced-search:toggle-label-show-all-inputs"
    />
    <Box
      mb=".75rem"
      width={
        Array [
          1,
        ]
      }
    >
      <Toggle
        checked={true}
        handleOnChange={[Function]}
        label="advanced-search:toggle-label-use-map"
      />
      <Connect(withI18nextTranslation(AdvancedSearchMap))
        handleChange={[Function]}
        mapVisible={true}
      />
    </Box>
  </Flex>
  <Dividerstyles
    borderColor="#6173fb"
    w={1}
  />
</Box>
`;

exports[`<AdvancedSearchInputs /> snapshots renders with default props 1`] = `
<Box>
  <Text
    fontWeight="700"
    m={0}
    my={2}
    width="100%"
  >
    advanced-search:title
  </Text>
  <Flex
    extend={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "_foldedDefaultProps": Object {},
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "baseHash": 400283751,
          "componentId": "sc-AxjAm",
          "isStatic": false,
          "rules": Array [
            "box-sizing: border-box;",
            [Function],
            [Function],
            [Function],
            [Function],
            [Function],
            [Function],
            [Function],
            [Function],
          ],
          "staticRulesId": "",
        },
        "displayName": "Box",
        "foldedComponentIds": Array [],
        "propTypes": Object {
          "alignSelf": [Function],
          "bg": [Function],
          "color": [Function],
          "flex": [Function],
          "fontSize": [Function],
          "m": [Function],
          "mb": [Function],
          "ml": [Function],
          "mr": [Function],
          "mt": [Function],
          "mx": [Function],
          "my": [Function],
          "order": [Function],
          "p": [Function],
          "pb": [Function],
          "pl": [Function],
          "pr": [Function],
          "pt": [Function],
          "px": [Function],
          "py": [Function],
          "width": [Function],
        },
        "render": [Function],
        "shouldForwardProp": undefined,
        "styledComponentId": "sc-AxjAm",
        "systemComponent": true,
        "target": Object {
          "$$typeof": Symbol(react.forward_ref),
          "render": [Function],
        },
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      }
    }
    flexWrap="wrap"
  >
    <Box
      mb=".75rem"
      pr={
        Array [
          0,
          0,
          ".5rem",
          ".5rem",
        ]
      }
      width={
        Array [
          1,
          1,
          0.5,
          0.5,
        ]
      }
    >
      <Connect(RatingSelect)
        label="advanced-search:input-label-course-rating"
        onChange={[Function]}
        placeholder="advanced-search:input-placeholder-course-rating"
      />
    </Box>
    <Box
      mb=".75rem"
      pr={
        Array [
          0,
          0,
          ".5rem",
          ".5rem",
        ]
      }
      width={
        Array [
          1,
          1,
          0.5,
          0.5,
        ]
      }
    >
      <CourseTypeSelect
        label="advanced-search:input-label-course-type"
        onChange={[Function]}
        placeholder="advanced-search:input-placeholder-course-type"
      />
    </Box>
    <Box
      mb=".75rem"
      pr={
        Array [
          0,
          0,
          ".5rem",
          ".5rem",
        ]
      }
      width={
        Array [
          1,
          1,
          0.5,
          0.5,
        ]
      }
    >
      <Label
        alignItems="center"
        fontSize={1}
        is="label"
        mb={1}
      >
        advanced-search:slider-label-hole-average-length
      </Label>
      <InputComponent
        focusOnMount={false}
        onChange={[Function]}
        options={
          Object {
            "domain": Array [
              10,
              180,
            ],
            "filterName": "holeAverageLength",
            "initialValues": Array [
              40,
              180,
            ],
            "step": 10,
            "type": "slider",
          }
        }
        placeholder=""
        value=""
      />
    </Box>
    <AdvancedSearchInputsstyles__FadeInBox
      show={false}
    />
    <Toggle
      checked={false}
      handleOnChange={[Function]}
      label="advanced-search:toggle-label-show-all-inputs"
    />
    <Box
      mb=".75rem"
      width={
        Array [
          1,
        ]
      }
    >
      <Toggle
        checked={true}
        handleOnChange={[Function]}
        label="advanced-search:toggle-label-use-map"
      />
      <Connect(withI18nextTranslation(AdvancedSearchMap))
        handleChange={[Function]}
        mapVisible={true}
      />
    </Box>
  </Flex>
  <Dividerstyles
    borderColor="#6173fb"
    w={1}
  />
</Box>
`;
